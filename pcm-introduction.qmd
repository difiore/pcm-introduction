---
title: "Intro to PCM"
format: html
editor_options: 
  chunk_output_type: console
---

## Libraries to Install and Load

Most are available on CRAN, but for {ggtree}, may need to do the following:

```{r}
if (!require("BiocManager", quietly = TRUE))
    install.packages("BiocManager")
BiocManager::install("ggtree")
```

```{r}
library(ape)
library(ggtree)
library(phytools)
library(tidyverse)
library(treedata.table)
```
## Plotting a Phylogeny

# Plot SM Figure 2 - Kuderna et al phylogeny ----
```{r}
tree_file <- "Kuderna data_s4_fossil_calibrated_time_tree.nex.tree"
tree <- read.tree(tree_file)
outgroup <- c("Tupaia_belangeri", "Galeopterus_variegatus", "Mus_musculus", "Oryctolagus_cuniculus")
tree <- root(tree, outgroup = outgroup, resolve.root = TRUE)
is.rooted.phylo(tree)
is.binary(tree)

## quick plot
plot.phylo(tree, type = "fan", cex = 0.6)
## note: tips are not aligned

## force the tree to be ultrametric for visualization
um_tree <- force.ultrametric(tree)
plot.phylo(um_tree, type = "fan", cex = 0.6)
## or type = "cladogram" or "phylogram"
## now tips are aligned

d <- read_csv("Kuderna_et_al_taxa.csv", col_names = TRUE) # adds in other taxonomic levels for taxa in Kuderna et al data set
d <- d |>
  rowwise() |>
  mutate(Genus = strsplit(label, "_")[[1]][1])

## make treedata.table object
t <- as.treedata.table(tree = tree, data = as.data.frame(d))

## plot with ggplot
p <- ggtree(um_tree, size = 0.3, layout = "fan") %<+%
  d +
  geom_tiplab(aes(label=label), size=2) +
p

# lewis et al results

tree_file <- "lewis et al tree.nexus"
tree <- read.nexus(tree_file)
par(mar = c(2, 1, 1, 1))
plot.phylo(tree, type = "phylogram", cex = 0.6, direction = "rightwards")
axisPhylo(backward = TRUE) # compare to lewis et al figure S1

tree_file <- "springer tree 1.nexus"
tree <- read.tree(tree_file)
d <- read_csv("lewis et al data.csv", col_names = TRUE)
d <- as.data.frame(d)
t <- as.treedata.table(tree = tree, data = d, name_column = "Species") # need to convert tibble to dataframe
phy <- t$phy
is.rooted.phylo(phy) # check if it's rooted
is.binary(phy) # check if it's binary
plot.phylo(phy, type = "phylogram", cex = 0.6) # compare to lewis figure 1
# axisPhylo(backward = TRUE)

### Run ASR -----
#### Define Data to Analyze ----
character_data <- t$dat$Dominance
names(character_data) <- t$dat$tip.label
character_data <- as.factor(character_data) # convert states to a factor (required for discrete traits in phytools)
tree <- t$phy
tree$node.label <- 1:Nnode(tree) + length(tree$tip.label)

#### Run Mk Ancestral State Reconstruction ----
# try ER, ARD, and SYM models
fitER <- fitMk(tree, character_data, model = "ER", pi = "fitzjohn")
# equal rates model, fitzjohn root prior
fitARD <- fitMk(tree, character_data, model = "ARD", pi = "fitzjohn")
# all rates different model, fitzjohn root prior
fitSYM <- fitMk(tree, character_data, model = "SYM", pi = "fitzjohn")
aov <- anova(fitER, fitARD, fitSYM) # compare models
bestMk <- rownames(aov[which.min(aov$AIC),])
Mk <- ancr(aov, type = "marginal", weighted = FALSE, tips = TRUE)
# with weighted = false, uses the best supported model for asr
Mk_probs <- Mk$ace
Mk_node_pies <- Mk_probs[(length(tree$tip.label) + 1):(length(tree$tip.label) + tree$Nnode), ]
Mk_tip_pies <- Mk_probs[1:length(tree$tip.label), ]


#### Run SCM Ancestral State Reconstruction ----
nsim <- 100  # Number of stochastic maps to generate
# scmER <- make.simmap(tree, character_data, model = "ER", nsim = nsim, pi = "fitzjohn")
# scmARD <- make.simmap(tree, character_data, model = "ARD", nsim = nsim, pi = "fitzjohn")
scmSYM <- make.simmap(tree, character_data, model = "SYM", nsim = nsim, pi = "fitzjohn")
# SYM is best model so others commented out

#### summarize the stochastic maps
summary_scm <- summary(scmSYM)

#### extract posterior probabilities and pies for internal nodes and tips
scm_probs <- summary_scm$ace
scm_node_pies <- scm_probs[1:tree$Nnode, ]
scm_tip_pies <- summary_scm$tips

#### Plotting Results ----
##### Mk Results ----
um_tree <- force.ultrametric(tree, method = "extend")
um_tree$root.edge <- 2

plot.phylo(um_tree, type = "fan", cex = 0.6)

#### add pie charts for ancestral states at internal nodes
nodelabels(
    pie = Mk_node_pies,
    piecol = colors,
    cex = 0.2
)

#### add pie charts for tips
tiplabels(
  pie = Mk_tip_pies,
  piecol = colors,
  cex = 0.2
)

  legend("topleft",
         legend = state_names,
         fill = colors,
         title = "Character States")

  ##### SCM Results----
  # uncomment to plot SCM results, which are virtually identical to Mk results
um_tree <- force.ultrametric(tree, method = "extend")
um_tree$root.edge <- 2

plot.phylo(um_tree, type = "fan", cex = 0.5, label.offset = 4, main = "Phylogenetic Tree with Ancestral State Reconstruction", no.margin = TRUE, root.edge = TRUE)

#### add pie charts for ancestral states at internal nodes
nodelabels(
  pie = scm_node_pies,
  piecol = colors,
  cex = 0.2
)

#### add pie charts for tips
tiplabels(
  pie = scm_tip_pies,
  piecol = colors,
  cex = 0.2
)

legend("topleft",
       legend = state_names,
       fill = colors,
       title = "Character States")


```
